{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","App.jsx","index.jsx"],"names":["Button","props","onClick","e","click","label","className","operation","double","triple","initialState","displayValue","clearDisplay","values","current","Calculator","state","this","setState","setOperation","equals","currentOperation","eval","n","includes","index","newValue","parseFloat","console","log","addDigit","op","value","clearMemory","Component","Display","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77f312c0.chunk.js","sourcesContent":["import \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      onClick={(e) => props.click && props.click(props.label)}\r\n      className={`\r\n      btn\r\n      ${props.operation ? \"operation\" : \"\"}\r\n      ${props.double ? \"double\" : \"\"}\r\n      ${props.triple ? \"triple\" : \"\"}\r\n  `}\r\n    >\r\n      {props.label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport Display from \"../components/Display\";\r\n\r\nimport \"./Calculator.css\";\r\n\r\nconst initialState = {\r\n  displayValue: \"0\",\r\n  clearDisplay: false,\r\n  operation: null,\r\n  values: [0, 0],\r\n  current: 0,\r\n};\r\n\r\nclass Calculator extends Component {\r\n  state = { ...initialState };\r\n\r\n  clearMemory() {\r\n    this.setState({ ...initialState });\r\n  }\r\n\r\n  setOperation(operation) {\r\n    if (this.state.current === 0) {\r\n      this.setState({ operation, current: 1, clearDisplay: true });\r\n    } else {\r\n      const equals = operation === \"=\";\r\n      const currentOperation = this.state.operation;\r\n\r\n      const values = [...this.state.values];\r\n      try {\r\n        values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`);\r\n      } catch {\r\n        values[0] = this.state.values[0];\r\n      }\r\n      values[1] = 0;\r\n\r\n      this.setState({\r\n        displayValue: values[0],\r\n        operation: equals ? null : operation,\r\n        current: equals ? 0 : 1,\r\n        clearDisplay: !equals,\r\n        values,\r\n      });\r\n    }\r\n  }\r\n\r\n  addDigit(n) {\r\n    if (n === \".\" && this.state.displayValue.includes(\".\")) {\r\n      return;\r\n    }\r\n\r\n    const clearDisplay =\r\n      this.state.displayValue === \"0\" || this.state.clearDisplay;\r\n\r\n    const currentValue = clearDisplay ? \"\" : this.state.displayValue;\r\n    const displayValue = currentValue + n;\r\n\r\n    this.setState({ displayValue, clearDisplay: false });\r\n\r\n    if (n !== \".\") {\r\n      const index = this.state.current;\r\n      const newValue = parseFloat(displayValue);\r\n      const values = [...this.state.values];\r\n      values[index] = newValue;\r\n      this.setState({ values });\r\n      console.log(values);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const addDigit = (n) => this.addDigit(n);\r\n    const setOperation = (op) => this.setOperation(op);\r\n    return (\r\n      <div className=\"calculator\">\r\n        <Display value={this.state.displayValue} />\r\n        <Button label=\"AC\" click={() => this.clearMemory()} triple />\r\n        <Button label=\"/\" click={setOperation} operation />\r\n        <Button label=\"7\" click={addDigit} />\r\n        <Button label=\"8\" click={addDigit} />\r\n        <Button label=\"9\" click={addDigit} />\r\n        <Button label=\"*\" click={setOperation} operation />\r\n        <Button label=\"4\" click={addDigit} />\r\n        <Button label=\"5\" click={addDigit} />\r\n        <Button label=\"6\" click={addDigit} />\r\n        <Button label=\"-\" click={setOperation} operation />\r\n        <Button label=\"1\" click={addDigit} />\r\n        <Button label=\"2\" click={addDigit} />\r\n        <Button label=\"3\" click={addDigit} />\r\n        <Button label=\"+\" click={setOperation} operation />\r\n        <Button label=\"0\" click={addDigit} double />\r\n        <Button label=\".\" click={addDigit} />\r\n        <Button label=\"=\" click={setOperation} operation />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import \"./Display.css\";\r\n\r\nconst Display = (props) => {\r\n  return <div className=\"display\">{props.value}</div>;\r\n};\r\n\r\nexport default Display;\r\n","import \"./App.css\";\nimport Calculator from \"./main/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Calculadora</h1>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}